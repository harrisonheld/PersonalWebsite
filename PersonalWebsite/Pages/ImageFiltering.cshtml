@page
@model ImageFilteringModel
@{
    ViewData["Title"] = "Image Filtering";
}
@section Scripts {

    <script>
        $(document).ready(function () {
            $('#applyFiltersButton').click(function () {

                var formData = new FormData($('#imageForm')[0]);

                var filterTypeNames = getAllFilterNames();
                var filterParameters = getAllFilterParameters();
                console.table(filterParameters);

                for (var i = 0; i < filterTypeNames.length; i++) {
                    formData.append('FilterTypeNames[' + i + ']', filterTypeNames[i]);
                }
                for(var i = 0; i < filterParameters.length; i++) {
					formData.append('FilterParameters[' + i + ']', filterParameters[i]);
				}

                $.ajax({
                    type: 'POST',
                    url: '/api/imagefilter/apply',
                    data: formData,
                    contentType: false, // Use false for FormData
                    processData: false, // Use false for FormData
                    xhrFields: {
                        responseType: 'blob' // Set the responseType to 'blob'
                    },
                    success: function (data) {
                        var imageUrl = URL.createObjectURL(data);
                        $('#afterImage').attr('src', imageUrl);
                    },
                });
            });

            $('#imageFile').change(function () {
                var inputImage = document.getElementById('beforeImage');
                inputImage.src = URL.createObjectURL(this.files[0]);
            });

            $('#slider').on('input', function () {
                var value = $('#slider').val();
                var clipValue = `polygon(0 0, ${value}% 0, ${value}% 100%, 0 100%)`;
                $('#beforeImage').css('clip-path', clipValue);
            });

            $('.addFilterButton').on('click', function() {
                // get the type of filter to add
                var filterType = $(this).data('filter-type');
                // get the list of params needed for the filter
                $.ajax({
                    type: 'GET',
                    url: '/api/imagefilter/filterParameters',
                    data: { filterTypeName: filterType },
                    success: function (data) {

                        var filterControlPanels = $('#filterContainer');

                        // Create a new container for the filter control panel
                        var filterControlPanel = generateFilterControlPanel(filterType, data);
                        filterControlPanels.append(filterControlPanel);
                    }
                });
            });
        });

        function generateFilterControlPanel(filterType, data) {

            var filterContainer = $('<div>').addClass('filterPanel');

            var header = $('<h3>').text(filterType);
            filterContainer.append(header);

            // Generate input fields
            for (var i = 0; i < data.length; i++) {

                var paramType = data[i].type;
                var paramName = data[i].name;
                console.log(paramType);

                var label = $('<label>').attr({
                    for: 'filterParams[' + i + '].Value'
                }).text(paramName);

                var input = $('<input>').attr({
                    type: 'text',
                    name: 'filterParams[' + i + '].Value', // Adjust the name based on your needs
                    placeholder: paramName
                });

                if(paramType == "Color") {
                    input.attr('type', 'color');
                }
                else if(paramType == "Single") {
                    input.attr({
                        type: 'range',
                        min: 0,
                        max: 1,
                        step: 0.01
                    });
                }

                filterContainer.append(label);
                filterContainer.append(input);
            }

            var deleteButton = $('<button>').text('Delete').on('click', function () {
                filterContainer.remove();
            });
            filterContainer.append(deleteButton);

            return filterContainer;
        }

        function getAllFilterNames() {
			var filterNames = [];
			$('.filterPanel').each(function () {
				filterNames.push($(this).find('h3').text());
			});
			return filterNames;
		}

        function getAllFilterParameters() {
            var filterParameters = [];
            $('.filterPanel input').each(function () {
                filterParameters.push($(this).val());
			});
            return filterParameters;
        }
    </script>
}

<h1>@ViewData["Title"]</h1>

<p>Harrison's wonderful image filtering pipeline</p>
<form id="imageForm" method="post" enctype="multipart/form-data">
    <!-- Image Upload -->
    <div>
        <label for="imageFile">Select an image to upload:</label>
        <input type="file" name="imageFile" id="imageFile" accept="image/*">
    </div>

    <!-- Filters -->
    <div id="filterContainer">
        <!-- Filter control panels will be added dynamically -->
    </div>

    <!-- Add Filter Buttons -->
    <div>
        @foreach(Type filterType in Model.FilterTypes)
		{
            <button type="button" class="addFilterButton" data-filter-type=@filterType.Name>
                <i class="fas fa-plus"></i>
                @filterType.Name
            </button>
		}
        </div>
    </div>

    <!-- Apply Filters Button -->
    <button id="applyFiltersButton" type="button">Apply Filters</button>
</form>

<!-- before and after image slider -->
<div class="relative w-1/4 mx-auto">
    <div class="relative">
        <img id="afterImage" class="absolute w-full" src="https://picsum.photos/535/354" alt="After" />
        <img id="beforeImage" class="w-full" src="https://picsum.photos/536/354" alt="Before" style="clip-path: polygon(0 0, 50% 0, 50% 100%, 0 100%)" />
    </div>
    <input id="slider" type="range" min="0" max="100" value="50" step="0.01" class="w-full" />
</div>